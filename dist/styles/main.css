/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */progress,sub,sup{vertical-align:baseline}button,hr,input{overflow:visible}*,:after,:before,html,legend{box-sizing:border-box}img,legend,object{max-width:100%}.btn,.wrap{text-align:center}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0} figcaption, menu,article,aside,details,figure,footer,header,main,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0} [hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{}button,select{text-transform:none}[type=submit], [type=reset],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{color:inherit;display:table;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.reset{margin:0;padding:0}html{color:#523E25;font-size:1em;line-height:1.4}.wrap{max-width:1100px;margin:0 auto;padding:2em 1em}.section-heading,.section-list{margin:0;padding:0}.section-list li{list-style:none}.link,a,a:visited{background:#A05035;color:#F2F2EC;text-decoration:none;cursor:pointer}.link:focus,.link:hover,a:focus,a:hover,a:visited:focus,a:visited:hover{background:#a85438;color:#ddddce}.hidden{display:none!important}.visuallyhidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.visuallyhidden.focusable:active,.visuallyhidden.focusable:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;width:auto}.invisible{visibility:hidden}.clearfix:after,.clearfix:before{content:" ";display:table}.clearfix:after{clear:both}.header-container{background:#DDC83A}.btn{display:block;max-width:300px;margin:0 auto;background:#A05035;color:#F2F2EC;font-size:1.6em;padding:1em;border-radius:4px}.countdown-container{background:#F2F2EC}.countdown-list{max-width:800px;margin:0 auto;display:-webkit-box;display:-ms-flexbox;display:flex}.countdown-list li{width:33%}.menu-container{background:#E4E5D8}.menu-list li{padding:4px;margin-bottom:1em;line-height:2}.menu-list .menu-title{display:inline-block;width:80%;font-weight:700}.menu-list .menu-count{display:inline-block;width:20%;background:#F2F2EC;color:#A05035}@media screen and (min-width:620px){.menu-list{margin:0 auto;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.menu-list li{width:31%;margin:10px 1%}}.footer-container{background:#F2F2EC}
/*# sourceMappingURL=data:application/json;base64, */
